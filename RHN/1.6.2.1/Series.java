package net.polishgames.rhenowar.util;

import java.util.Map;

public enum Series implements Rhenowar
{
	
	RHN_0181	(	"1.6.2.1"		,	25	),
	RHN_0180	(	"1.6.1.7"		,	24	),
	RHN_0179	(	"1.6.1.6"		,	24	),
	RHN_0178	(	"1.6.1.5"		,	24	),
	RHN_0177	(	"1.6.1.4"		,	24	),
	RHN_0176	(	"1.6.1.3"		,	24	),
	RHN_0175	(	"1.6.1.2"		,	24	),
	RHN_0174	(	"1.6.1.1"		,	24	),
	RHN_0173	(	"1.5.4.8"		,	23	),
	RHN_0172	(	"1.5.4.7"		,	22	),
	RHN_0171	(	"1.5.4.6"		,	22	),
	RHN_0170	(	"1.5.4.5"		,	22	),
	RHN_0169	(	"1.5.4.4"		,	22	),
	RHN_0168	(	"1.5.4.3"		,	22	),
	RHN_0167	(	"1.5.4.2"		,	22	),
	RHN_0166	(	"1.5.4.1"		,	22	),
	RHN_0165	(	"1.5.3.3"		,	21	),
	RHN_0164	(	"1.5.3.2"		,	21	),
	RHN_0163	(	"1.5.3.1"		,	21	),
	RHN_0162	(	"1.5.2.10"		,	20	),
	RHN_0161	(	"1.5.2.9"		,	20	),
	RHN_0160	(	"1.5.2.8"		,	20	),
	RHN_0159	(	"1.5.2.7"		,	20	),
	RHN_0158	(	"1.5.2.6"		,	20	),
	RHN_0157	(	"1.5.2.5"		,	20	),
	RHN_0156	(	"1.5.2.4"		,	20	),
	RHN_0155	(	"1.5.2.3"		,	20	),
	RHN_0154	(	"1.5.2.2"		,	20	),
	RHN_0153	(	"1.5.2.1"		,	19	),
	RHN_0152	(	"1.5.1.12"		,	18	),
	RHN_0151	(	"1.5.1.11"		,	18	),
	RHN_0150	(	"1.5.1.10"		,	18	),
	RHN_0149	(	"1.5.1.9"		,	18	),
	RHN_0148	(	"1.5.1.8"		,	18	),
	RHN_0147	(	"1.5.1.7"		,	18	),
	RHN_0146	(	"1.5.1.6"		,	18	),
	RHN_0145	(	"1.5.1.5"		,	18	),
	RHN_0144	(	"1.5.1.4"		,	18	),
	RHN_0143	(	"1.5.1.3"		,	18	),
	RHN_0142	(	"1.5.1.2"		,	18	),
	RHN_0141	(	"1.5.1.1"		,	18	),
	RHN_0140	(	"1.4.5.8"		,	17	),
	RHN_0139	(	"1.4.5.7"		,	17	),
	RHN_0138	(	"1.4.5.6"		,	17	),
	RHN_0137	(	"1.4.5.5"		,	17	),
	RHN_0136	(	"1.4.5.4"		,	17	),
	RHN_0135	(	"1.4.5.3"		,	17	),
	RHN_0134	(	"1.4.5.2"		,	17	),
	RHN_0133	(	"1.4.5.1"		,	17	),
	RHN_0132	(	"1.4.4.5"		,	16	),
	RHN_0131	(	"1.4.4.4"		,	16	),
	RHN_0130	(	"1.4.4.3"		,	16	),
	RHN_0129	(	"1.4.4.2"		,	16	),
	RHN_0128	(	"1.4.4.1"		,	16	),
	RHN_0127	(	"1.4.3.21"		,	15	),
	RHN_0126	(	"1.4.3.20"		,	15	),
	RHN_0125	(	"1.4.3.19"		,	15	),
	RHN_0124	(	"1.4.3.18"		,	15	),
	RHN_0123	(	"1.4.3.17"		,	15	),
	RHN_0122	(	"1.4.3.16"		,	15	),
	RHN_0121	(	"1.4.3.15"		,	15	),
	RHN_0120	(	"1.4.3.14"		,	15	),
	RHN_0119	(	"1.4.3.13"		,	15	),
	RHN_0118	(	"1.4.3.12"		,	15	),
	RHN_0117	(	"1.4.3.11"		,	15	),
	RHN_0116	(	"1.4.3.10"		,	15	),
	RHN_0115	(	"1.4.3.9"		,	15	),
	RHN_0114	(	"1.4.3.8"		,	15	),
	RHN_0113	(	"1.4.3.7"		,	15	),
	RHN_0112	(	"1.4.3.6"		,	15	),
	RHN_0111	(	"1.4.3.5"		,	15	),
	RHN_0110	(	"1.4.3.4"		,	15	),
	RHN_0109	(	"1.4.3.3"		,	15	),
	RHN_0108	(	"1.4.3.2"		,	15	),
	RHN_0107	(	"1.4.3.1"		,	15	),
	RHN_0106	(	"1.4.3-pre6"	,	14	),
	RHN_0105	(	"1.4.3-pre5"	,	14	),
	RHN_0104	(	"1.4.3-pre4"	,	14	),
	RHN_0103	(	"1.4.3-pre3"	,	14	),
	RHN_0102	(	"1.4.3-pre2"	,	14	),
	RHN_0101	(	"1.4.3-pre1"	,	14	),
	RHN_0100	(	"1.4.2.14"		,	13	),
	RHN_0099	(	"1.4.2.13"		,	13	),
	RHN_0098	(	"1.4.2.12"		,	13	),
	RHN_0097	(	"1.4.2.11"		,	13	),
	RHN_0096	(	"1.4.2.10"		,	13	),
	RHN_0095	(	"1.4.2.9"		,	13	),
	RHN_0094	(	"1.4.2.8"		,	13	),
	RHN_0093	(	"1.4.2.7"		,	13	),
	RHN_0092	(	"1.4.2.6"		,	13	),
	RHN_0091	(	"1.4.2.5"		,	13	),
	RHN_0090	(	"1.4.2.4"		,	13	),
	RHN_0089	(	"1.4.2.3"		,	13	),
	RHN_0088	(	"1.4.2.2"		,	13	),
	RHN_0087	(	"1.4.2.1"		,	13	),
	RHN_0086	(	"1.4.1.4"		,	12	),
	RHN_0085	(	"1.4.1.3"		,	12	),
	RHN_0084	(	"1.4.1.2"		,	12	),
	RHN_0083	(	"1.4.1.1"		,	12	),
	RHN_0082	(	"1.3.3.12"		,	11	),
	RHN_0081	(	"1.3.3.11"		,	11	),
	RHN_0080	(	"1.3.3.10"		,	11	),
	RHN_0079	(	"1.3.3.9"		,	11	),
	RHN_0078	(	"1.3.3.8"		,	11	),
	RHN_0077	(	"1.3.3.7"		,	11	),
	RHN_0076	(	"1.3.3.6"		,	11	),
	RHN_0075	(	"1.3.3.5"		,	10	),
	RHN_0074	(	"1.3.3.4"		,	10	),
	RHN_0073	(	"1.3.3.3"		,	10	),
	RHN_0072	(	"1.3.3.2"		,	9	),
	RHN_0071	(	"1.3.3.1"		,	9	),
	RHN_0070	(	"1.3.2.19"		,	8	),
	RHN_0069	(	"1.3.2.18"		,	8	),
	RHN_0068	(	"1.3.2.17"		,	8	),
	RHN_0067	(	"1.3.2.16"		,	8	),
	RHN_0066	(	"1.3.2.15"		,	7	),
	RHN_0065	(	"1.3.2.14"		,	7	),
	RHN_0064	(	"1.3.2.13"		,	7	),
	RHN_0063	(	"1.3.2.12"		,	7	),
	RHN_0062	(	"1.3.2.11"		,	7	),
	RHN_0061	(	"1.3.2.10"		,	7	),
	RHN_0060	(	"1.3.2.9"		,	7	),
	RHN_0059	(	"1.3.2.8"		,	7	),
	RHN_0058	(	"1.3.2.7"		,	7	),
	RHN_0057	(	"1.3.2.6"		,	7	),
	RHN_0056	(	"1.3.2.5"		,	7	),
	RHN_0055	(	"1.3.2.4"		,	7	),
	RHN_0054	(	"1.3.2.3"		,	7	),
	RHN_0053	(	"1.3.2.2"		,	7	),
	RHN_0052	(	"1.3.2.1"		,	7	),
	RHN_0051	(	"1.3.1.24"		,	6	),
	RHN_0050	(	"1.3.1.23"		,	6	),
	RHN_0049	(	"1.3.1.22"		,	6	),
	RHN_0048	(	"1.3.1.21"		,	6	),
	RHN_0047	(	"1.3.1.20"		,	5	),
	RHN_0046	(	"1.3.1.19"		,	5	),
	RHN_0045	(	"1.3.1.18"		,	5	),
	RHN_0044	(	"1.3.1.17"		,	5	),
	RHN_0043	(	"1.3.1.16"		,	5	),
	RHN_0042	(	"1.3.1.15"		,	5	),
	RHN_0041	(	"1.3.1.14"		,	5	),
	RHN_0040	(	"1.3.1.13"		,	5	),
	RHN_0039	(	"1.3.1.12"		,	5	),
	RHN_0038	(	"1.3.1.11"		,	5	),
	RHN_0037	(	"1.3.1.10"		,	5	),
	RHN_0036	(	"1.3.1.9"		,	5	),
	RHN_0035	(	"1.3.1.8"		,	5	),
	RHN_0034	(	"1.3.1.7"		,	5	),
	RHN_0033	(	"1.3.1.6"		,	5	),
	RHN_0032	(	"1.3.1.5"		,	5	),
	RHN_0031	(	"1.3.1.4"		,	5	),
	RHN_0030	(	"1.3.1.3"		,	5	),
	RHN_0029	(	"1.3.1.2"		,	5	),
	RHN_0028	(	"1.3.1.1"		,	5	),
	RHN_0027	(	"1.2.3.8"		,	4	),
	RHN_0026	(	"1.2.3.7"		,	4	),
	RHN_0025	(	"1.2.3.6"		,	4	),
	RHN_0024	(	"1.2.3.5"		,	3	),
	RHN_0023	(	"1.2.3.4"		,	3	),
	RHN_0022	(	"1.2.3.3"		,	3	),
	RHN_0021	(	"1.2.3.2"		,	3	),
	RHN_0020	(	"1.2.3.1"		,	3	),
	RHN_0019	(	"1.2.3.0"		,	3	),
	RHN_0018	(	"1.2.2.9"		,	2	),
	RHN_0017	(	"1.2.2.8"		,	2	),
	RHN_0016	(	"1.2.2.7"		,	2	),
	RHN_0015	(	"1.2.2.6"		,	2	),
	RHN_0014	(	"1.2.2.5"		,	2	),
	RHN_0013	(	"1.2.2.4"		,	2	),
	RHN_0012	(	"1.2.2.3"		,	2	),
	RHN_0011	(	"1.2.2.2"		,	2	),
	RHN_0010	(	"1.2.2.1"		,	2	),
	RHN_0009	(	"1.2.2.0"		,	2	),
	RHN_0008	(	"1.2.1.1"		,	1	),
	RHN_0007	(	"1.2.1.0"		,	1	),
	RHN_0006	(	"1.2.1"			,	1	),
	RHN_0005	(	"1.1.2.0"		,	1	),
	RHN_0004	(	"1.1.2.0-pre2"	,	0	),
	RHN_0003	(	"1.1.2.0-pre1"	,	0	),
	RHN_0002	(	"1.1.2"			,	0	),
	RHN_0001	(	"1.1.1"			,	0	),
	;

	private final String version;
	private final short series;
	
	private Series(final String version, final int series)
	{
		this.version = version;
		this.series = (short) series;
	}
	
	public final String giveVersion()
	{
		return this.version;
	}
	
	public final short giveSeries()
	{
		return this.series;
	}
	
	public final int giveBuild()
	{
		return Series.values().length - this.ordinal();
	}
	
	@Override
	public Map<String, Object> giveProperties(final Map<String, Object> map)
	{
		map.put("version", this.giveVersion());
		map.put("series", this.giveSeries());
		map.put("build", this.giveBuild());
		return map;
	}
	
	@Override
	public String toString()
	{
		if(Util.hasUtil())
			return Util.giveUtil().toString(this);
		else
			return this.giveVersion();
	}
	
	public static final Series giveValue(final String version)
	{
		Util.nonEmpty(version);
		for(final Series series : Series.values())
			if(series.giveVersion().equals(version))
				return series;
		return null;
	}
	
	public static final Series giveValue(final short series)
	{
		for(final Series value : Series.values())
			if(value.giveSeries() == series)
				return value;
		return null;
	}
	
	public static final Series giveValue(final int build)
	{
		for(final Series series : Series.values())
			if(series.giveBuild() == build)
				return series;
		return null;
	}
	
}
